Java Generics
    - Mecanismul care permite parametizarea tipurilor utilizate la definirea de clase, interfete sau metode
    - Concept similar cu template C++

    class Test<T> {}
    T items2 = new T();     //eroare de compilare
    T[] iArray = new T[];   //eroare de compilare
    T obj = (T)new Object();    //warning la compilare

    In Java, the toString() method is a built-in method defined in the Object class. It is used to return a string representation of an object. By default, the toString() method returns a string that consists of the class name, followed by an "@" symbol, and the object's hash code.

    However, it is often necessary to provide a more meaningful string representation of an object. This is where overriding the toString() method becomes useful. By overriding the toString() method in a class, you can customize the string representation of objects of that class.

    To override the toString() method, you need to follow these steps:

    Include the @Override annotation before the method declaration to ensure that you are actually overriding the method from the superclass.
    Implement the method body to return a string representation of the object.
    Here's an example to illustrate the concept:

    public class Person {
        private String name;
        private int age;

        public Person(String name, int age) {
            this.name = name;
            this.age = age;
        }

        @Override
        public String toString() {
            return "Person [name=" + name + ", age=" + age + "]";
        }

        public static void main(String[] args) {
            Person person = new Person("John", 25);
            System.out.println(person.toString());
        }
    }

    
JCF - Java Collection Framework

    - solutia de generic din Java
    - JCF este compusa din:
        x Interfete
        x Implementari
        x Algoritmi
    
    - INTERFETE DE BAZA:

        1. Collection: seturi {multime - elemente unice}, liste, queue {difera de lista in functie de metodele de acces oferite}
        2. Map: Dictionarul din Python {21: "Java"} - nu avem iterator la Map, ci furnizeaza o lista de chei

        Implementari de baza:
            HashTable - HashMap
            Vectori - ArrayList
            Arbori - TreeSet / TreeMap 
            Liste - LinkedList

        private Map<String, int> note;      //generalitatea codului

        public Student(String nume) {
            this.note = new HashMap<>();    //recomandare de specilizare in constructor
        }

    Prin StringBuilder si append compilatorul folosesc ca o lista de stringuri si la apelul toString() concateaza vs concatenarea cu + in care mereu se face un new String()

    